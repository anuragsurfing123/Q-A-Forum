{"version":3,"sources":["backend.js","auth/helper/index.js","core/Menu.js","core/Base.js","core/Home.js","user/Login.js","user/Register.js","auth/helper/AdminRoutes.js","auth/helper/PrivateRoutes.js","user/helper/userapicall.js","user/UserDashBoard.js","user/AdminDashBoard.js","user/Profile.js","user/Allquestions.js","user/Profileinsert.js","user/Addquestions.js","user/Answers.js","user/Upvote.js","user/Contactus.js","user/AnswerOfQuestion.js","user/UpdateQuestions.js","Routes.js","index.js"],"names":["API","process","isAuthenticated","window","localStorage","getItem","JSON","parse","currentTab","history","path","location","pathname","color","withRouter","className","style","to","person","role","onClick","next","removeItem","fetch","method","then","response","console","log","catch","err","signout","push","Base","title","description","children","Home","class","src","Login","useState","email","password","error","loading","didRedirect","values","setValues","handleChange","name","event","target","value","onSubmit","user","preventDefault","headers","Accept","body","stringify","json","data","setItem","authenticate","display","onChange","type","Register","success","AdminRoute","Component","component","rest","render","props","state","from","PrivateRoute","allquestions","loadQuestion","userId","token","Authorization","UserDashBoard","_id","questions","setQuestions","setError","useEffect","map","index","key","textone","texttwo","date","slice","upvotes","length","answers","text","borderTop","AdminDashBoard","loadAllQuestions","deleteThisQuestion","QuestionId","deleteQuestion","Profile","profile","setProfile","loadProfile","getprofile","username","country","website","languages","Allquestions","Profileinsert","insertprofile","Addquestions","question","setQuestion","insertquestion","Answers","getIdByUrl","match","params","questionId","insertanswer","id","Upvote","upvote","upvotequestion","Contactus","AnswerOfQuestion","deleteAnswersOfQuestion","AnswerId","deleteAnswers","UpdateQuestions","onequestions","updateques","Routes","exact","AnswersOfQuestion","ReactDom","document","getElementById"],"mappings":"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","file":"static/js/main.30bba7e7.chunk.js","sourcesContent":["export const API=process.env.REACT_APP_BACKEND\r\n","import { API } from \"../../backend\";\r\n\r\nexport const register = user => {\r\n  return fetch(`${API}/auth/register`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify(user)\r\n  })\r\n    .then(response => {\r\n      \r\n      return response.json();\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const login = user => {\r\n  return fetch(`${API}/auth/login`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify(user)\r\n  })\r\n    .then(response => {\r\n      \r\n      return response.json();\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const authenticate = (data, next) => {\r\n  if (typeof window !== \"undefined\") {\r\n    localStorage.setItem(\"jwt\", JSON.stringify(data));\r\n    next();\r\n  }\r\n};\r\n\r\nexport const signout = next => {\r\n  if (typeof window !== \"undefined\") {\r\n    localStorage.removeItem(\"jwt\");\r\n    next();\r\n\r\n    return fetch(`${API}/auth/signout`, {\r\n      method: \"GET\"\r\n    })\r\n      .then(response => console.log(\"signout success\"))\r\n      .catch(err => console.log(err));\r\n  }\r\n};\r\n\r\nexport const isAuthenticated = () => {\r\n  if (typeof window == \"undefined\") {\r\n    return false;\r\n  }\r\n  if (localStorage.getItem(\"jwt\")) {\r\n    return JSON.parse(localStorage.getItem(\"jwt\"));\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n","import React,{Fragment} from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { signout, isAuthenticated } from \"../auth/helper\";\r\n\r\nconst currentTab = (history, path) => {\r\n  if (history.location.pathname === path) {\r\n    return { color: \"#2ecc72\" };\r\n  } else {\r\n    return { color: \"#FFFFFF\" };\r\n  }\r\n};\r\n\r\nconst Menu = ({ history }) => (\r\n\r\n\r\n<div>\r\n\r\n  <div>\r\n    <ul className=\"nav nav-tabs bg-dark\">\r\n      <li className=\"nav-item\">\r\n        <Link style={currentTab(history, \"/\")} className=\"nav-link\" to=\"/\">\r\n          Home\r\n        </Link>\r\n      </li>\r\n\r\n\r\n      <li className=\"nav-item\">\r\n        <Link style={currentTab(history, \"/allquestions\")} className=\"nav-link\" to=\"/allquestions\">\r\n          All Questions\r\n        </Link>\r\n      </li>\r\n      \r\n      {isAuthenticated() && isAuthenticated().person.role===0 &&(\r\n        <li className=\"nav-item\">\r\n        <Link\r\n          style={currentTab(history, \"/user/dashboard\")}\r\n          className=\"nav-link\"\r\n          to=\"/user/dashboard\"\r\n        >\r\n          U.Dashboard\r\n        </Link>\r\n      </li>\r\n      )}\r\n      \r\n\r\n\r\n\r\n\r\n      {isAuthenticated() && isAuthenticated().person.role===0 &&(\r\n        <li className=\"nav-item\">\r\n        <Link\r\n          style={currentTab(history, \"/user/profile\")}\r\n          className=\"nav-link\"\r\n          to=\"/user/profile\"\r\n        >\r\n          User Profile\r\n        </Link>\r\n      </li>\r\n      )}\r\n      \r\n\r\n      {isAuthenticated() && isAuthenticated().person.role===1 &&(\r\n        <li className=\"nav-item\">\r\n        <Link\r\n          style={currentTab(history, \"/admin/dashboard\")}\r\n          className=\"nav-link\"\r\n          to=\"/admin/dashboard\"\r\n        >\r\n          A. Dashboard\r\n        </Link>\r\n      </li>\r\n      )}\r\n\r\n\r\n      {!isAuthenticated() && (\r\n          <Fragment>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              style={currentTab(history, \"/register\")}\r\n              className=\"nav-link\"\r\n              to=\"/register\"\r\n            >\r\n              Signup\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              style={currentTab(history, \"/login\")}\r\n              className=\"nav-link\"\r\n              to=\"/login\"\r\n            >\r\n              Sign In\r\n            </Link>\r\n          </li>\r\n          </Fragment>\r\n      )}\r\n\r\n\r\n      {isAuthenticated() && (\r\n        <li className=\"nav-item\">\r\n          <span\r\n            className=\"nav-link text-warning\"\r\n            onClick={() => {\r\n              signout(() => {\r\n                history.push(\"/\");\r\n              });\r\n            }}\r\n          >\r\n            Signout\r\n          </span>\r\n        </li>\r\n      )}\r\n    </ul>\r\n  </div>\r\n\r\n\r\n  </div>\r\n);\r\n\r\nexport default withRouter(Menu);\r\n","import React from 'react'\r\nimport Menu from './Menu';\r\nimport \"../style.css\"\r\nimport { Link } from 'react-router-dom';\r\n\r\n const Base=({\r\n     title=\"My Title\",\r\n     description=\"My Description\",\r\n     className=\"bg-light text-black p-4\",\r\n     children\r\n })=> {\r\n    return (\r\n        <div>\r\n           <Menu/>\r\n            <div className=\"container-fluid p-0\">\r\n                <div className=\"jumbotron  text-black text-center bgimg\">\r\n                    <h2 className=\"display-4\">{title}</h2>\r\n    <p className=\"lead\">{description}</p>\r\n\r\n                </div>\r\n    <div className={className}>{children}</div>\r\n            </div>\r\n\r\n\r\n            {/* <footer className=\"footer bg-light  mt-auto py-3\">\r\n                <div className=\"container-fluid bg-success text-black text-center py-3\">\r\n                    <h4>If You Got any question Feel free to react out</h4>\r\n                    <Link className=\"btn btn-info btn-lg\" to=\"/contactus\">Contact US</Link>\r\n\r\n                </div>\r\n                <div className=\"container\">\r\n                    <span className=\"text-muted\">\r\n                        Made BY <span className=\"text-black\">Anurag Mishra</span>\r\n                    </span>\r\n                </div>\r\n            </footer> */}\r\n<footer className=\"footer bg-dark  mt-auto py-3\">\r\n<div className=\"container text-white\">\r\n  <div className=\"row\">\r\n    <div className=\"col-6\">\r\n      <h3>About Us</h3>\r\n      <p> Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged</p>\r\n    </div>\r\n    <div className=\"col-3\">\r\n        <h3>Links</h3>\r\n    <Link className=\"btn text-white\" to=\"/contactus\">Contact US</Link><br/>\r\n    <Link className=\"btn text-white\" to=\"/allquestions\">All Questions</Link><br/>\r\n    <Link className=\"btn text-white\" to=\"/register\">Register</Link><br/>\r\n    <Link className=\"btn text-white\" to=\"/login\">Login</Link><br/>\r\n    </div>\r\n    <div className=\"col-3\">\r\n    <h3>Social</h3>\r\n    <Link className=\"btn text-white\" to=\"/contactus\">Facebook</Link><br/>\r\n    <Link className=\"btn text-white\" to=\"/contactus\">Instagram</Link><br/>\r\n    <Link className=\"btn text-white\" to=\"/contactus\">Github</Link><br/>\r\n    </div>\r\n  </div>\r\n</div>\r\n</footer>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Base;","import React,{useState,useEffect} from 'react';\r\n\r\nimport Base from './Base'\r\nimport \"../style.css\"\r\nimport { Link } from 'react-router-dom';\r\nexport default function Home() {\r\n\r\n    \r\n\r\n    return (\r\n<Base title=\"Q & A Website\" description=\"Question & answer Website\" className=\"bgimage  p-4\">\r\n        \r\n<div>\r\n\r\n<div class=\"container fordeveloper\">\r\n<h1 className=\"text-center\">For developers, by developers</h1>\r\n<p className=\"pl-5 pr-5 text-center pt-4\">Stack Overflow is an open community for anyone that codes. We help you get answers to your toughest coding questions, share knowledge with your coworkers in private, and find your next dream job.</p>\r\n\r\n\r\n  <div class=\"row pt-4\">\r\n    <div class=\"col-sm gridcolgap\">\r\n      <img src=\"./images/public-qa.svg\"/>\r\n      <p>Get answers to more than 16.5 million questions and give back by sharing your knowledge with others. Sign up for an account.</p>\r\n    \r\n    </div>\r\n    <div class=\"col-sm gridcolgap\">\r\n    <img src=\"./images/private-qa.svg\"/>\r\n      <p>Level up with Stack Overflow while you work. Share knowledge privately with your coworkers using our flagship Q&A engine.</p>\r\n    \r\n    </div>\r\n    <div class=\"col-sm gridcolgap\">\r\n    <img src=\"./images/jobs.svg\"/>\r\n      <p>Find the right job through high quality listings and search for roles based on title, technology stack, salary, location, and more.\r\n\r\n</p>\r\n    \r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<div className=\"container grow\">\r\n    <h1 className=\"text-cenetr\">Learn and grow with Stack Overflow</h1>\r\n    <h2 className=\"text-cenetr pt-4\">Questions are everywhere, answers are on Stack Overflow\r\n</h2>\r\n  <div className=\"row pt-4\">\r\n    <div className=\"col-sm\">\r\n    <img src=\"./images/developer.svg\"/>\r\n    <h5>Write the script of the future</h5>\r\n      <p>Get your coding questions answered to learn, build, and level up whether you’re beginning with JavaScript or a React professional.\r\n\r\n\r\n      </p>\r\n      \r\n    </div>\r\n    <div className=\"col-sm\">\r\n    <img src=\"./images/open-source.svg\"/>\r\n    <h5>Support open source</h5>\r\n      <p>Reach users of your project by following tags, answering newcomer questions, and empowering experts in the community. Read the curl project creator’s story.\r\n          \r\n      </p>\r\n    </div>\r\n    <div className=\"col-sm\">\r\n    <img src=\"./images/advocate.svg\"/>\r\n    <h5>Acquire and share knowledge</h5>\r\n      <p>Answer questions and gain insights from an audience of developers using your technology on Stack Overflow.\r\n          \r\n      </p>\r\n    </div>\r\n\r\n    <div className=\"col-sm\">\r\n    <img src=\"./images/career-switcher.svg\"/>\r\n    <h5>Find career opportunities</h5>\r\n      <p>Create a profile that shows off your expertise and credentials to help you make your next move. Start your Developer Story\r\n          \r\n      </p>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n<div className=\"container homerow\">\r\n    <h1 className=\"text-center pb-5 pt-5\">For businesses, by developers</h1>\r\n  <div className=\"row\">\r\n    <div className=\"col-sm homecol\">\r\n        <div className=\"row\">\r\n            <div className=\"col-3\">\r\n     <img src=\"./images/private-questions.svg\"/>\r\n     </div>\r\n     <div className=\"col-9\">\r\n     <p>Quickly find and share internal knowledge with Private Q&A</p>\r\n     </div>\r\n     </div>\r\n\r\n    </div>\r\n    <div className=\"col-sm homecol\">\r\n    <div className=\"row\">\r\n            <div className=\"col-3\">\r\n     <img src=\"./images/find-candidate.svg\"/>\r\n     </div>\r\n     <div className=\"col-9\">\r\n     <p>Find the perfect candidate for your growing technical team with Talent solutions</p>\r\n     </div>\r\n     </div>\r\n    </div>\r\n    <div className=\"col-sm homecol\">\r\n    <div className=\"row\">\r\n            <div className=\"col-3\">\r\n     <img src=\"./images/accelerate.svg\"/>\r\n     </div>\r\n     <div className=\"col-9\">\r\n     <p>Accelerate the discovery of your products or services through our Advertising platform</p>\r\n     </div>\r\n     </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n<div className=\"container\">\r\n  <div className=\"row hire\">\r\n    <div className=\"col-sm\">\r\n    <img src=\"./images/find-candidate.svg\"/>\r\n    <h1>Hire your technical talent</h1>\r\n      <p>We help expand your technical hiring strategy to promote your employer brand and highlight relevant open roles to our community of over 100 million developers and technologists.\r\n</p>\r\n<button className=\"btn btn-info rounded\">StackOverflow Talent</button>\r\n    </div>\r\n    <div className=\"col-sm\">\r\n    <img src=\"./images/accelerate.svg\"/>\r\n    <h1>Reach developers worldwide</h1>\r\n      <p>Use the world’s largest resource for people who code to help you increase awareness and showcase your product or service across Stack Overflow’s network of Q&A sites.</p>\r\n      <Link className=\"btn btn-info rounded\" to=\"/allquestions\">All Question</Link>\r\n    </div>\r\n    \r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </Base>\r\n       \r\n    )\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Base from \"../core/Base\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { login, authenticate, isAuthenticated } from \"../auth/helper\";\r\n\r\nconst Login = () => {\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    error: \"\",\r\n    loading: false,\r\n    didRedirect: false\r\n  });\r\n\r\n  const { email, password, error, loading, didRedirect } = values;\r\n  const { person } = isAuthenticated();\r\n\r\n  const handleChange = name => event => {\r\n    setValues({ ...values, error: false, [name]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    setValues({ ...values, error: false, loading: true });\r\n    login({ email, password })\r\n      .then(data => {\r\n        if (data.error) {\r\n          setValues({ ...values, error: data.error, loading: false });\r\n        } else {\r\n          authenticate(data, () => {\r\n            setValues({\r\n              ...values,\r\n              didRedirect: true\r\n            });\r\n          });\r\n        }\r\n      })\r\n      .catch(console.log(\"signin request failed\"));\r\n  };\r\n\r\n  const performRedirect = () => {\r\n    //TODO: do a redirect here\r\n    if (didRedirect) {\r\n      \r\n      if (person && person.role === 1) {\r\n        return <Redirect to=\"/admin/dashboard\"/>;\r\n      } else {\r\n        return <Redirect to=\"/user/dashboard\"/>;\r\n      }\r\n    }\r\n    if (isAuthenticated()) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  };\r\n\r\n  const loadingMessage = () => {\r\n    return (\r\n      loading && (\r\n        <div className=\"alert alert-info\">\r\n          <h2>Loading...</h2>\r\n        </div>\r\n      )\r\n    );\r\n  };\r\n\r\n  const errorMessage = () => {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-sm-3 text-left\">\r\n          <div\r\n            className=\"alert alert-danger\"\r\n            style={{ display: error ? \"\" : \"none\" }}\r\n          >\r\n            {error}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const signInForm = () => {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-sm-3 text-left\">\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <label className=\"text-dark\">Email</label>\r\n              <input\r\n                onChange={handleChange(\"email\")}\r\n                value={email}\r\n                className=\"form-control\"\r\n                type=\"email\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label className=\"text-dark\">Password</label>\r\n              <input\r\n                onChange={handleChange(\"password\")}\r\n                value={password}\r\n                className=\"form-control\"\r\n                type=\"password\"\r\n              />\r\n            </div>\r\n            <button onClick={onSubmit} className=\"btn btn-success btn-block\">\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Base title=\"Sign In page\" description=\"A page for user to sign in!\">\r\n      {loadingMessage()}\r\n      {errorMessage()}\r\n      {signInForm()}\r\n      {performRedirect()}\r\n\r\n      \r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport Base from \"../core/Base\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { register } from \"../auth/helper\";\r\n\r\nconst Register = () => {\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    error: \"\",\r\n    success: false\r\n  });\r\n\r\n  const { name, email, password, error, success } = values;\r\n\r\n  const handleChange = name => event => {\r\n    setValues({ ...values, error: false, [name]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    setValues({ ...values, error: false });\r\n    register({ name, email, password })\r\n      .then(data => {\r\n        if (data.error) {\r\n          setValues({ ...values, error: data.error, success: false });\r\n        } else {\r\n          setValues({\r\n            ...values,\r\n            name: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            error: \"\",\r\n            success: true\r\n          });\r\n        }\r\n      })\r\n      .catch(console.log(\"Error in signup\"));\r\n  };\r\n\r\n  const signUpForm = () => {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-sm-3 text-left\">\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <label className=\"text-dark\">Name</label>\r\n              <input className=\"form-control\" onChange={handleChange(\"name\")} type=\"text\" value={name} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"text-dark\">Email</label>\r\n              <input   className=\"form-control\"   onChange={handleChange(\"email\")}  type=\"email\"  value={email} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label className=\"text-dark\">Password</label>\r\n              <input  onChange={handleChange(\"password\")} className=\"form-control\" type=\"password\"  value={password} />\r\n            </div>\r\n            <button onClick={onSubmit} className=\"btn btn-success btn-block\">\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const successMessage = () => {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-sm-3 text-left\">\r\n          <div  className=\"alert alert-success\"  style={{ display: success ? \"\" : \"none\" }} >\r\n            New account was created successfully. Please{\" \"}\r\n            <Link to=\"/login\">Login Here</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const errorMessage = () => {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-sm-3 text-left\">\r\n          <div className=\"alert alert-danger\"  style={{ display: error ? \"\" : \"none\" }} >\r\n            {error}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Base title=\"Sign up page\" description=\"A page for user to sign up!\">\r\n      {successMessage()}\r\n      {errorMessage()}\r\n      {signUpForm()}\r\n      \r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"./index\";\r\n\r\nconst AdminRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        isAuthenticated() && isAuthenticated().person.role === 1 ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: props.location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default AdminRoute;\r\n","import React from \"react\";\r\nimport {Route,Redirect} from \"react-router-dom\";\r\nimport{isAuthenticated} from \"./index\";\r\n\r\n\r\nconst PrivateRoute=({ component:Component, ...rest }) =>{\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={ props =>\r\n          isAuthenticated() ? (\r\n            <Component {...props}/>\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: props.location }\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  export default PrivateRoute;","import { API } from \"../../backend\";\r\n\r\nexport const allquestions = () => {\r\n  return fetch(`${API}/questions`, {\r\n       method: \"GET\" \r\n    \r\n    })\r\n    .then(response => {\r\n        \r\n      return response.json();\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\n\r\n\r\nexport const getprofile = (userId,token) => {\r\n  return fetch(`${API}/profile`, {\r\n       method: \"GET\" ,\r\n       headers:{\r\n        \r\n  \r\n  Authorization: `Bearer ${token}`\r\n\r\n    }\r\n    \r\n    })\r\n    .then(response => {\r\n        \r\n      return response.json();\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const deleteUserProfile=(userId,token)=>{\r\n  return fetch(`${API}/profile`,{\r\n      method:\"DELETE\",\r\n      headers:{\r\n          Accept: \"application/json\",\r\n    \r\n    Authorization: `Bearer ${token}`\r\n\r\n      }\r\n      \r\n  }).then(response=>{\r\n      return response.json()\r\n  }).catch(err=>console.log(err))\r\n}\r\n\r\n\r\n\r\nexport const insertprofile = (userId,token,user) => {\r\n  return fetch(`${API}/profile`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      Authorization:`Bearer ${token}`,\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify(user)\r\n  })\r\n    .then(response => {\r\n      \r\n      return response.json();\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\n\r\n\r\nexport const loadQuestion = (userId,token) => {\r\n  return fetch(`${API}/questions`, {\r\n       method: \"GET\" ,\r\n       headers:{\r\n         Authorization:`Bearer ${token}`\r\n       }\r\n    \r\n    })\r\n    .then(response => {\r\n        \r\n      return response.json();\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\n\r\nexport const insertquestion = (userId,token,question) => {\r\n  return fetch(`${API}/questions`, {\r\n       method: \"POST\" ,\r\n       headers: {\r\n        Accept: \"application/json\",\r\n        Authorization:`Bearer ${token}`,\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(question)\r\n    })\r\n    .then(response => {\r\n        \r\n      return response.json();\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport const insertanswer = (questionId,userId,token,user) => {\r\n  return fetch(`${API}/questions/answers/${questionId}`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      Authorization:`Bearer ${token}`,\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify(user)\r\n  })\r\n    .then(response => {\r\n      \r\n      return response.json();\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const upvotequestion = (questionId,userId,token,upvote) => {\r\n  return fetch(`${API}/questions/upvote/${questionId}`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      Authorization:`Bearer ${token}`,\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify(upvote)\r\n  })\r\n    .then(response => {\r\n     \r\n      return response.json();\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\n\r\nexport const deleteQuestion=(QuestionId,userId,token)=>{\r\n  return fetch(`${API}/questions/delete/${QuestionId}/${userId}`,{\r\n      method:\"DELETE\",\r\n      headers:{\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n    Authorization: `Bearer ${token}`,\r\n\r\n      }\r\n      \r\n  }).then(response=>{\r\n    \r\n      return response.json()\r\n  }).catch(err=>console.log(err))\r\n}\r\n\r\n\r\nexport const deleteAnswers=(AnswerId,QuestionId,userId,token)=>{\r\n  return fetch(`${API}/questions/delete/${AnswerId}/${QuestionId}/${userId}`,{\r\n      method:\"DELETE\",\r\n      headers:{\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n    Authorization: `Bearer ${token}`,\r\n\r\n      }\r\n      \r\n  }).then(response=>{\r\n    \r\n      return response.json()\r\n  }).catch(err=>console.log(err))\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const onequestions = (questionId) => {\r\n  return fetch(`${API}/questions/${questionId}`, {\r\n       method: \"GET\" \r\n    \r\n    })\r\n    .then(response => {\r\n        \r\n      return response.json();\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\n\r\n\r\n\r\nexport const updateques = (id,userId,token,question) => {\r\n  return fetch(`${API}/questions/${id}`, {\r\n       method: \"PUT\" ,\r\n       headers: {\r\n        Accept: \"application/json\",\r\n        Authorization:`Bearer ${token}`,\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(question)\r\n      \r\n    })\r\n    .then(response => {\r\n        console.log(response)\r\n      return response.json();\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n","import React,{useState,useEffect} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { isAuthenticated } from '../auth/helper';\r\nimport Base from '../core/Base';\r\nimport Menu from '../core/Menu'\r\nimport { allquestions,loadQuestion } from './helper/userapicall'\r\n\r\n\r\nconst UserDashBoard=()=> {\r\n\r\nconst{token,person:{_id,name,email,role}}=isAuthenticated()\r\n\r\n\r\n\r\n\r\n\r\n    const [questions,setQuestions]=useState([]);\r\n    const [error,setError]=useState(false);\r\n\r\n\r\n    const loadAllQuestions=()=>{\r\n        loadQuestion(_id,token).then(data=>{\r\n            if(data.error){\r\n                setError(data.error)\r\n            }\r\n            else{\r\n                \r\n                setQuestions(data)\r\n                \r\n            }\r\n        })\r\n    }\r\n  \r\n\r\n    useEffect(()=>{\r\n        loadAllQuestions()\r\n\r\n    },[])\r\n\r\n \r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        \r\n        <Base title=\"Welcome to User Area\" description=\"User Area(Questions Asked By You)\" className=\"container\">\r\n          <div>\r\n           <Link className=\"btn btn-info rounded\" to=\"/user/addquestions\">Add Questions</Link>\r\n          \r\n\r\n               \r\n           <div className=\"p-5\">\r\n               \r\n           {questions.map((questions,index)=>{\r\n               if(questions.user===_id){\r\n               \r\n               \r\n               return(\r\n\r\n                \r\n                   \r\n<div key={index}>\r\n               <div>\r\n               <span className=\"badge badge-danger mr-2\">Question {index+1} </span>\r\n             <h3 className=\"text-info\">{questions.textone}</h3> \r\n               \r\n               <h5 className=\"text-secondary\">{questions.texttwo}</h5>\r\n               <span className=\"badge badge-success mr-2\">{questions.name}</span>\r\n               <span className=\"badge badge-success mr-2\">{questions.date.slice(0,10)} {questions.date.slice(11,16)}</span>\r\n               {isAuthenticated()&&<Link className=\"btn btn-info rounded\" to={`/answers/${questions._id}`}>Give Answer</Link>}\r\n               <hr/>\r\n               </div>\r\n               <div>\r\n                   <div className=\"container\">\r\n                       <div className=\"row\">\r\n                       <div className=\"col-sm-3\">\r\n                                <div className=\"text-center pt-5\">\r\n                                {isAuthenticated()&&<Link className=\"btn btn-warning\" to={`/questions/upvote/${questions._id}`}>Upvote</Link>}\r\n                                <h4>Upvotes</h4>\r\n                                    <h4 key={index}>{questions.upvotes.length}</h4>\r\n                                    {/* {questions.upvotes.map((upvotes,index)=>{\r\n                                        return(\r\n                                            <h4 key={index}>{questions.upvotes.length}</h4>\r\n                                            \r\n                                        )\r\n                                    })} */}\r\n                                    </div>\r\n\r\n                                </div>\r\n                           <div className=\"col-sm-9\">\r\n                           {questions.answers.map((answers,index)=>{\r\n                       return(\r\n                           <div className=\"col-sm-9\" key={index}>\r\n                               <h4 className=\"text-danger\">Answer {index+1}</h4>\r\n                           <h3 >{answers.text}</h3>\r\n                           <span className=\"badge badge-info mr-2\">{answers.name}</span>\r\n                           <span className=\"badge badge-info mr-2\">{answers.date.slice(0,10)} {answers.date.slice(11,16)}</span>\r\n                           <hr style={{borderTop: \"dotted 1px\"}} />\r\n                           </div>\r\n\r\n                       )\r\n                   })}\r\n                   \r\n                           </div>\r\n                       </div>\r\n\r\n\r\n                       <div className=\"row\">\r\n\r\n<div className=\"col-12\">\r\n<hr/>\r\n\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n                   </div>\r\n               </div>\r\n               </div>\r\n\r\n\r\n\r\n\r\n               )\r\n\r\n           }else{\r\n               return(\r\n                   <div></div>\r\n               )\r\n           }\r\n\r\n\r\n        }\r\n           \r\n           \r\n           \r\n           )}\r\n\r\n\r\n\r\n           <div>\r\n               \r\n           </div>\r\n       </div>\r\n\r\n\r\n\r\n\r\n        \r\n       </div>\r\n        </Base>\r\n    )\r\n}\r\nexport default UserDashBoard ","\r\nimport Base from '../core/Base'\r\nimport React,{useState,useEffect} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { isAuthenticated } from '../auth/helper';\r\nimport { allquestions,loadQuestion,deleteQuestion } from './helper/userapicall'\r\n\r\n\r\nconst AdminDashBoard=()=> {\r\n    const{token,person:{_id,name,email,role}}=isAuthenticated()\r\n\r\n\r\n\r\n    \r\n    const [questions,setQuestions]=useState([]);\r\n    const [error,setError]=useState(false);\r\n\r\n\r\n    const loadAllQuestions=()=>{\r\n        loadQuestion(_id,token).then(data=>{\r\n            if(data.error){\r\n                setError(data.error)\r\n            }\r\n            else{\r\n                \r\n                setQuestions(data)\r\n                \r\n            }\r\n        })\r\n    }\r\n  \r\n\r\n    useEffect(()=>{\r\n        loadAllQuestions()\r\n\r\n    },[])\r\n\r\n    const deleteThisQuestion=QuestionId=>{\r\n        deleteQuestion(QuestionId,_id,token).then(data=>{\r\n            console.log(data);\r\n            if(data.error){\r\n                console.log(data.error)\r\n            }else{\r\n                loadAllQuestions();\r\n            }\r\n      \r\n        })\r\n      }\r\n\r\n\r\n      const allanswers=QuestionId=>{\r\n          loadAllQuestions()\r\n      }\r\n\r\n    return (\r\n\r\n        <Base title=\"Welcome to Admin Area\" description=\"Manage Question And Answers\" className=\"container\">\r\n        <div>\r\n        {questions.map((questions,index)=>{\r\n            return(\r\n                <div class=\"container\">\r\n<div class=\"row\">\r\n  <div class=\"col-6\">\r\n            <h4>{questions.textone}</h4><h6>{questions.texttwo}</h6><br/>\r\n  </div>\r\n  <div class=\"col-2\">\r\n  {isAuthenticated()&&<Link className=\"btn btn-success rounded\" to={`/question/answers/${questions._id}`}>Answers</Link>}\r\n  </div>\r\n  <div class=\"col-2\">\r\n  {isAuthenticated&&<Link className=\"btn btn-info rounded\" to={`/updatequestion/${questions._id}`}>Update</Link>}\r\n  </div>\r\n  <div class=\"col-2\">\r\n  {isAuthenticated&&<button onClick={()=>{deleteThisQuestion(questions._id)}} className=\"btn btn-danger\">Delete</button>}\r\n  </div>\r\n</div>\r\n</div>\r\n            )\r\n\r\n\r\n       \r\n        }\r\n        )}\r\n        </div>\r\n        </Base>\r\n    )\r\n}\r\nexport default AdminDashBoard ","import React,{useState,useEffect} from 'react'\r\nimport Base from \"../core/Base\";\r\nimport {isAuthenticated} from \"../auth/helper/index\";\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { getprofile,deleteUserProfile } from './helper/userapicall';\r\n\r\n\r\nconst Profile=()=> {\r\nconst {token,person:{_id,name,email,role}}=isAuthenticated();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst [profile,setProfile]=useState([]);\r\nconst [error,setError]=useState(false);\r\n\r\n\r\nconst loadProfile=()=>{\r\n    \r\n    getprofile(_id,token).then(data=>{\r\n       \r\n       \r\n        if(error){\r\n            \r\n            \r\n            setError(data.error)\r\n        }\r\n        else{\r\n           \r\n            setProfile(data)\r\n            \r\n        }\r\n    })\r\n}\r\n\r\n\r\nuseEffect(()=>{\r\n   loadProfile()\r\n    \r\n\r\n\r\n\r\n},[])\r\n\r\n\r\n\r\n\r\n// const deleteThisUserProfile=()=>{\r\n//     deleteUserProfile(_id,token).then(data=>{\r\n//         if(data.error){\r\n//             console.log(data.error)\r\n//         }else{\r\n//             loadProfile()\r\n            \r\n           \r\n//         }\r\n\r\n//     })\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst adminRightSide=()=>{\r\n    \r\n  \r\n    return(\r\n     \r\n        <div className=\"card mb-4\">\r\n            <h4 className=\"card-header\">User Information</h4>\r\n            <ul className=\"list-group\">\r\n                <li className=\"list-group-item\">\r\n                    <span className=\"badge badge-success mr-2\">Name:</span>\r\n                    {name}\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <span className=\"badge badge-success mr-2\">Email:</span>\r\n                    {email}\r\n                </li>\r\n\r\n                <li className=\"list-group-item\">\r\n                    <span className=\"badge badge-success mr-2\">Role:</span>\r\n                    User\r\n                </li>\r\n\r\n\r\n\r\n                <li className=\"list-group-item\">\r\n                    <span className=\"badge badge-danger mr-2\">User Profile</span>\r\n                   {profile.error?( <Link className=\"btn btn-success float-right\" to=\"/user/profile/insert\">Insert UserProfile</Link>):\"\"}\r\n                   \r\n                </li>\r\n\r\n\r\n\r\n                <li className=\"list-group-item\">\r\n                    <span className=\"badge badge-success mr-2\">Username:</span>\r\n                    {profile.username?profile.username:profile.error}\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <span className=\"badge badge-success mr-2\">Country:</span>\r\n                    {profile.country?profile.country:profile.error}\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <span className=\"badge badge-success mr-2\">Website:</span>\r\n                    {profile.website?profile.website:profile.error}\r\n                </li>\r\n\r\n                <li className=\"list-group-item\">\r\n                    <span className=\"badge badge-success mr-2\">Languages:</span>\r\n                    \r\n                       {profile.languages?profile.languages:profile.error}\r\n                        \r\n                    \r\n                </li>\r\n            </ul>\r\n            {/* <button className=\"btn btn-danger rounded\" onClick={()=>{deleteThisUserProfile(_id)}}>Delete User Profile</button> */}\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\n    return (\r\n        <Base title=\"Welcome to User Area\" description=\"Check Your Profile\" className=\"container bg-success p-4\">\r\n            <div className=\"row\">\r\n                \r\n                <div className=\"col-lg-9 col-md-9 col-sm-12\">{adminRightSide()}</div>\r\n            </div>\r\n        \r\n        \r\n        </Base>\r\n    )\r\n}\r\nexport default Profile","import React,{useState,useEffect} from 'react'\r\nimport Base from '../core/Base';\r\nimport Menu from '../core/Menu'\r\nimport { allquestions, insertanswer} from './helper/userapicall'\r\n\r\nimport Collapsible from 'react-collapsible';\r\nimport { isAuthenticated } from '../auth/helper';\r\nimport { Link } from 'react-router-dom';\r\n\r\n const Allquestions=()=> {\r\n\r\n\r\n    \r\n    const [questions,setQuestions]=useState([]);\r\n    const [error,setError]=useState(false);\r\n\r\n\r\n    const loadAllQuestions=()=>{\r\n        allquestions().then(data=>{\r\n            if(error.data){\r\n                setError(data.error)\r\n            }\r\n            else{\r\n                \r\n                setQuestions(data)\r\n                \r\n            }\r\n        })\r\n    }\r\n  \r\n\r\n    useEffect(()=>{\r\n        \r\n        loadAllQuestions()\r\n        \r\n\r\n    },[])\r\n\r\n\r\n\r\n\r\n\r\n    //For Submitting answers\r\n\r\n//get current posts\r\n\r\n\r\n    \r\n    \r\n    return (\r\n        <Base title=\"All Questions and Answers\" description=\"All Questions Answers by all users\">\r\n    {isAuthenticated()&& <Link className=\"btn btn-info rounded\" to=\"/user/addquestions\">Add Questions</Link>}\r\n        <div>\r\n           \r\n           \r\n            <div className=\"p-5\">\r\n                \r\n                {questions.map((questions,index)=>{\r\n                \r\n                    return(\r\n                        \r\n<div key={index}>\r\n                    <div>\r\n                    <span className=\"badge badge-danger mr-2\">Question {index+1} </span>\r\n                  <h3 className=\"text-info\">{questions.textone}</h3> \r\n                    \r\n                    <h5 className=\"text-secondary\">{questions.texttwo}</h5>\r\n                    <span className=\"badge badge-success mr-2\">{questions.name}</span>\r\n                    <span className=\"badge badge-success mr-2\">{questions.date.slice(0,10)} {questions.date.slice(11,16)}</span>\r\n                    {isAuthenticated()&&<Link className=\"btn btn-info rounded\" to={`/answers/${questions._id}`}>Give Answer</Link>}\r\n                    \r\n                    <hr/>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm-3\">\r\n                                <div className=\"text-center pt-5\">\r\n                                    <h4>Upvotes</h4>\r\n\r\n                                    {isAuthenticated()&&<Link className=\"btn btn-warning\" to={`/questions/upvote/${questions._id}`}>Upvote</Link>}\r\n                                    <h4 key={index}>{questions.upvotes.length}</h4>\r\n                                    {/* {questions.upvotes.map((upvotes,index)=>{\r\n                                        return(\r\n                                            <h4 key={index}>{questions.upvotes.length}</h4>\r\n                                            \r\n                                        )\r\n                                    })\r\n                                    \r\n                                    } */}\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className=\"col-sm-9\">\r\n                                {questions.answers.map((answers,index)=>{\r\n                            return(\r\n                                <div className=\"col-sm-9\" key={index}>\r\n                                    <h4 className=\"text-danger\">Answer {index+1}</h4>\r\n                                <h3 >{answers.text}</h3>\r\n                                <span className=\"badge badge-info mr-2\">{answers.name}</span>\r\n                                <span className=\"badge badge-info mr-2\">{answers.date.slice(0,10)} {answers.date.slice(11,16)}</span>\r\n\r\n\r\n\r\n                               \r\n\r\n                                \r\n                                <hr style={{borderTop: \"dotted 1px\"}} />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                \r\n                                </div>\r\n\r\n                            )\r\n                        })}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        \r\n                        \r\n                                </div>\r\n                            </div>\r\n\r\n<div className=\"row\">\r\n\r\n<div className=\"col-12\">\r\n<hr/>\r\n\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    )\r\n\r\n                })}\r\n                <div>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n        \r\n        </Base>\r\n    )\r\n}\r\nexport default Allquestions","import React,{useState,useEffect} from 'react'\r\nimport { isAuthenticated } from '../auth/helper';\r\nimport Base from '../core/Base'\r\nimport {insertprofile} from './helper/userapicall'\r\nconst Profileinsert=() =>{\r\n    const {token,person:{_id,name,email,role}}=isAuthenticated();\r\n\r\n    const [values, setValues] = useState({\r\n        username: \"\",\r\n        website: \"\",\r\n        country: \"\",\r\n        languages:\"\",\r\n        error: \"\",\r\n        success: false\r\n      });\r\n    \r\n      const { username, website, country,languages, error, success } = values;\r\n    \r\n      const handleChange = name => event => {\r\n        setValues({ ...values, error: false, [name]: event.target.value });\r\n      };\r\n    \r\n\r\n\r\n\r\n\r\n      const onSubmit = event => {\r\n        event.preventDefault();\r\n        setValues({ ...values, error: false });\r\n        insertprofile(_id,token,{ username,website,country,languages })\r\n          .then(data => {\r\n            if (data.error) {\r\n              setValues({ ...values, error: data.error, success: false });\r\n            } else {\r\n              setValues({\r\n                ...values,\r\n                username: \"\",\r\n                website: \"\",\r\n                country: \"\",\r\n                languages:\"\",\r\n                error: \"\",\r\n                success: true\r\n              });\r\n            }\r\n          })\r\n          .catch(console.log(\"Error in Creating Profile\"));\r\n      };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const InsertProfileForm = () => {\r\n        return (\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 offset-sm-3 text-left\">\r\n              <form>\r\n                <div className=\"form-group\">\r\n                  <label className=\"text-dark\">Username</label>\r\n                  <input className=\"form-control\"  onChange={handleChange(\"username\")} type=\"text\" value={username} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label className=\"text-dark\">Website</label>\r\n                  <input   className=\"form-control\"   onChange={handleChange(\"website\")}  type=\"text\"  value={website} />\r\n                </div>\r\n    \r\n                <div className=\"form-group\">\r\n                  <label className=\"text-dark\">Country</label>\r\n                  <input  onChange={handleChange(\"country\")} className=\"form-control\" type=\"text\"  value={country} />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label className=\"text-dark\">Language</label>\r\n                  <input  onChange={handleChange(\"languages\")} className=\"form-control\" type=\"text\"  value={languages} />\r\n                </div>\r\n                <button onClick={onSubmit} className=\"btn btn-success btn-block\">\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        );\r\n      };\r\n    \r\n\r\n\r\n\r\n      const successMessage = () => {\r\n        return (\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 offset-sm-3 text-left\">\r\n              <div  className=\"alert alert-success\"  style={{ display: success ? \"\" : \"none\" }} >\r\n                Profile Created Successfiully\r\n                \r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      };\r\n    \r\n      const errorMessage = () => {\r\n        return (\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 offset-sm-3 text-left\">\r\n              <div className=\"alert alert-danger\"  style={{ display: error ? \"\" : \"none\" }} >\r\n                {error}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      };\r\n    \r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Base title=\"Insert Profile\" description=\"Insert User Profile\">\r\n            {successMessage()}\r\n            {errorMessage()}\r\n            {InsertProfileForm()}\r\n            \r\n            \r\n            </Base>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profileinsert","import React,{useState,useEffect} from 'react'\r\nimport { isAuthenticated } from '../auth/helper';\r\nimport Base from '../core/Base'\r\nimport {insertquestion} from './helper/userapicall'\r\nconst Addquestions=() =>{\r\n    const {token,person:{_id,email,role}}=isAuthenticated();\r\n\r\n    const [question, setQuestion] = useState({\r\n        textone: \"\",\r\n        texttwo: \"\",\r\n        name: \"\",\r\n        \r\n        error: \"\",\r\n        success: false\r\n      });\r\n    \r\n      const { textone,texttwo,name, error, success } = question;\r\n    \r\n      const handleChange = name => event => {\r\n        setQuestion({ ...question, error: false, [name]: event.target.value });\r\n      };\r\n    \r\n\r\n\r\n\r\n\r\n      const onSubmit = event => {\r\n        event.preventDefault();\r\n        setQuestion({ ...question, error: false });\r\n        insertquestion(_id,token,{ textone,texttwo,name})\r\n          .then(data => {\r\n            if (data.error) {\r\n              setQuestion({ ...question, error: data.error, success: false });\r\n            } else {\r\n              setQuestion({\r\n                ...question,\r\n                textone: \"\",\r\n                texttwo: \"\",\r\n                name: \"\",\r\n                error: \"\",\r\n                success: true\r\n              });\r\n            }\r\n          })\r\n          .catch(console.log(\"Error in Creating Question\"));\r\n      };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const InsertProfileForm = () => {\r\n        return (\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 offset-sm-3 text-left\">\r\n              <form>\r\n                <div className=\"form-group\">\r\n                  <label className=\"text-dark\">Question</label>\r\n                  <input className=\"form-control\"  onChange={handleChange(\"textone\")} type=\"text\" value={textone} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label className=\"text-dark\">Description</label>\r\n                  <input   className=\"form-control\"   onChange={handleChange(\"texttwo\")}  type=\"text\"  value={texttwo} />\r\n                </div>\r\n    \r\n                <div className=\"form-group\">\r\n                  <label className=\"text-dark\">Name</label>\r\n                  <input  onChange={handleChange(\"name\")} className=\"form-control\" type=\"text\"  value={name} />\r\n                </div>\r\n\r\n                \r\n                <button onClick={onSubmit} className=\"btn btn-success btn-block\">\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        );\r\n      };\r\n    \r\n\r\n\r\n\r\n      const successMessage = () => {\r\n        return (\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 offset-sm-3 text-left\">\r\n              <div  className=\"alert alert-success\"  style={{ display: success ? \"\" : \"none\" }} >\r\n                Question Added Sussfully\r\n                \r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      };\r\n    \r\n      const errorMessage = () => {\r\n        return (\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 offset-sm-3 text-left\">\r\n              <div className=\"alert alert-danger\"  style={{ display: error ? \"\" : \"none\" }} >\r\n                {error}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      };\r\n    \r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Base title=\"Insert Profile\" description=\"Insert User Profile\">\r\n            {successMessage()}\r\n            {errorMessage()}\r\n            {InsertProfileForm()}\r\n            \r\n            \r\n            </Base>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Addquestions","import React,{useState,useEffect} from 'react'\r\nimport Base from '../core/Base';\r\nimport Menu from '../core/Menu'\r\nimport { allquestions, insertanswer } from './helper/userapicall'\r\n\r\nimport Collapsible from 'react-collapsible';\r\nimport { isAuthenticated } from '../auth/helper';\r\nimport { Link } from 'react-router-dom';\r\nimport queryString from 'query-string'\r\n const Answers=(props)=> {\r\n\r\n    const getIdByUrl=props.match.params;\r\n\r\n\r\n    const {token,person:{_id,email,role}}=isAuthenticated();\r\n    const [questions,setQuestions]=useState([]);\r\n    const [error,setError]=useState(false);\r\n\r\n\r\n    const loadAllQuestions=()=>{\r\n        \r\n        allquestions().then(data=>{\r\n            if(error.data){\r\n                setError(data.error)\r\n            }\r\n            else{\r\n                \r\n                setQuestions(data)\r\n                \r\n            }\r\n        })\r\n    }\r\n  \r\n\r\n    useEffect(()=>{\r\n        loadAllQuestions()\r\n\r\n    },[])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const [values, setValues] = useState({\r\n        name: \"\",\r\n        text:\"\",\r\n        error: \"\",\r\n        success: false\r\n      });\r\n    \r\n      const { name,text, success } = values;\r\n    \r\n      const handleChange = name => event => {\r\n        setValues({ ...values, error: false, [name]: event.target.value });\r\n      };\r\n    \r\n      const onSubmit = event => {\r\n        event.preventDefault();\r\n        setValues({ ...values, error: false });\r\n        insertanswer(getIdByUrl.id,_id,token,{ name, text })\r\n          .then(data => {\r\n            if (data.error) {\r\n              setValues({ ...values, error: data.error, success: false });\r\n            } else {\r\n              setValues({\r\n                ...values,\r\n                name: \"\",\r\n               text:\"\",\r\n                error: \"\",\r\n                success: true\r\n              });\r\n            }\r\n          })\r\n          .catch(console.log(\"Error in signup\"));\r\n      };\r\n  \r\n\r\n\r\n\r\n\r\n      const successMessage = () => {\r\n        return (\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 offset-sm-3 text-left\">\r\n              <div  className=\"alert alert-success\"  style={{ display: success ? \"\" : \"none\" }} >\r\n                Answer Submitted Successfully\r\n                \r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      };\r\n    \r\n      const errorMessage = () => {\r\n        return (\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 offset-sm-3 text-left\">\r\n              <div className=\"alert alert-danger\"  style={{ display: error ? \"\" : \"none\" }} >\r\n                {error}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      };\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n<Base title=\"Answer the Question\" description=\"Give Answers Of Questions\">\r\n\r\n{questions.map((questions,index)=>{\r\n  if(questions._id===getIdByUrl.id){\r\n    return(\r\n        <div key={index}>\r\n             <div>\r\n                    <span className=\"badge badge-danger mr-2\">Question {index+1} </span>\r\n                  <h3>{questions.textone}</h3> \r\n                    \r\n                    <h5 className=\"text-secondary\">{questions.texttwo}</h5>\r\n                    <span className=\"badge badge-success mr-2\">{questions.name}</span>\r\n                    <span className=\"badge badge-success mr-2\">{questions.date.slice(0,10)} {questions.date.slice(11,16)}</span>\r\n                   \r\n                    <hr/>\r\n                    {successMessage()}\r\n                    {errorMessage()}\r\n                    <form>\r\n            <div className=\"form-group\">\r\n              <label className=\"text-dark\">Name</label>\r\n              <input className=\"form-control\" onChange={handleChange(\"name\")} type=\"text\" value={name} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"text-dark\">Answer</label>\r\n              <textarea  className=\"form-control\"   onChange={handleChange(\"text\")}  type=\"text\"  value={text} />\r\n            </div>\r\n\r\n            \r\n            <button onClick={onSubmit} className=\"btn btn-success btn-block\">\r\n              Submit\r\n            </button>\r\n          </form>\r\n                    </div>\r\n            \r\n            \r\n            </div>\r\n    \r\n        )\r\n    }else{\r\n        return(\r\n            <div></div>\r\n        )\r\n    }\r\n   \r\n}\r\n          \r\n        \r\n    )\r\n}\r\n</Base>\r\n\r\n</div>\r\n    )\r\n}\r\nexport default Answers","import React,{useState,useEffect} from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { isAuthenticated } from '../auth/helper';\r\nimport { upvotequestion } from './helper/userapicall';\r\n\r\n\r\n\r\nconst Upvote=(props) =>{\r\n\r\n    const getIdByUrl=props.match.params;\r\nconst {token,person:{_id,role}}=isAuthenticated()\r\n\r\n    const [values, setValues] = useState([]);\r\n\r\n\r\n    const onSubmit = event => {\r\n        \r\n    \r\n    upvotequestion(getIdByUrl.id,_id,token)\r\n      .then(data => {\r\n       \r\n          setValues(...values );\r\n        \r\n      })\r\n      .catch(console.log(\"Error in upvting\"));\r\n  };\r\n\r\n \r\n  \r\n\r\n\r\n    return (\r\n        <div>\r\n            Loading...\r\n            {onSubmit()}\r\n        \r\n            <Redirect to=\"/allquestions\"/>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Upvote","import React from 'react'\r\nimport Base from '../core/Base'\r\n\r\nconst Contactus=()=> {\r\n    return (\r\n        <Base title=\"Contact Us\" description=\"Contact Us by Given Email\">\r\n        <div>\r\n        <div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm\">\r\n      <label>Email:</label>\r\n      <label>abc@gmail.com</label>\r\n      <br/>\r\n      <label>Phone:</label>\r\n      <label>7894561230</label>\r\n    </div>\r\n    <div class=\"col-sm\">\r\n    <label>Address:</label>\r\n      <label>45,Abc Street</label>\r\n    </div>\r\n    \r\n  </div>\r\n</div>\r\n        </div>\r\n        </Base>\r\n    )\r\n}\r\n\r\n\r\nexport default Contactus","import React,{useState,useEffect} from 'react'\r\nimport Base from '../core/Base';\r\nimport Menu from '../core/Menu'\r\nimport { allquestions, insertanswer,deleteAnswers } from './helper/userapicall'\r\n\r\nimport Collapsible from 'react-collapsible';\r\nimport { isAuthenticated } from '../auth/helper';\r\nimport { Link } from 'react-router-dom';\r\nimport queryString from 'query-string'\r\n const AnswerOfQuestion=(props)=> {\r\n\r\n    const getIdByUrl=props.match.params;\r\n\r\n\r\n    const {token,person:{_id,email,role}}=isAuthenticated();\r\n    const [questions,setQuestions]=useState([]);\r\n    const [error,setError]=useState(false);\r\n\r\n\r\n    const loadAllQuestions=()=>{\r\n        \r\n        allquestions().then(data=>{\r\n            if(error.data){\r\n                setError(data.error)\r\n            }\r\n            else{\r\n                \r\n                setQuestions(data)\r\n                \r\n            }\r\n        })\r\n    }\r\n  \r\n\r\n    useEffect(()=>{\r\n        loadAllQuestions()\r\n\r\n    },[])\r\n\r\n\r\n\r\n\r\n\r\n    const deleteAnswersOfQuestion=AnswerId=>{\r\n        deleteAnswers(AnswerId,getIdByUrl.id,_id,token).then(data=>{\r\n            console.log(data);\r\n            if(data.error){\r\n                console.log(data.error)\r\n            }else{\r\n                loadAllQuestions();\r\n            }\r\n      \r\n        })\r\n      }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n<Base title=\"Answers of Question\" description=\"See Answers And Delete\">\r\n\r\n{questions.map((questions,index)=>{\r\n  if(questions._id===getIdByUrl.id){\r\n      console.log(questions)\r\n    return(\r\n        <div key={index}>\r\n             <div>\r\n                    <span className=\"badge badge-danger mr-2\">Question {index+1} </span>\r\n                  <h3>{questions.textone}</h3> \r\n                  \r\n                    \r\n                    <h5 className=\"text-secondary\">{questions.texttwo}</h5>\r\n                    <span className=\"badge badge-success mr-2\">{questions.name}</span>\r\n                    <span className=\"badge badge-success mr-2\">{questions.date.slice(0,10)} {questions.date.slice(11,16)}</span>\r\n                   \r\n                    <hr/>\r\n                    {questions.answers.map((answers,index)=>{\r\n                        return(\r\n                //             <div key={index}>\r\n                //              <span className=\"badge badge-danger mr-2\">Question {index+1} </span>\r\n                //   <h3>{answers.text}</h3>\r\n\r\n                //         </div>\r\n                <div key={index} className=\"container\">\r\n  <div className=\"row\">\r\n    <div className=\"col-6\">\r\n    <span className=\"badge badge-info mr-2\">Answer {index+1} </span>\r\n                   <h3>{answers.text}</h3>\r\n    </div>\r\n    <div className=\"col-3\">\r\n      \r\n    </div>\r\n    <div className=\"col-3\">\r\n    {isAuthenticated&&<button onClick={()=>{deleteAnswersOfQuestion(answers._id)}} className=\"btn btn-danger\">Delete</button>}\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n                        )\r\n\r\n                    }\r\n                    )}\r\n                    \r\n                    </div>\r\n            \r\n            \r\n            </div>\r\n    \r\n        )\r\n    }else{\r\n        return(\r\n            <div></div>\r\n        )\r\n    }\r\n   \r\n}\r\n          \r\n        \r\n    )\r\n}\r\n</Base>\r\n\r\n</div>\r\n    )\r\n}\r\nexport default AnswerOfQuestion","import React,{useState,useEffect} from 'react'\r\nimport { isAuthenticated } from '../auth/helper';\r\nimport Base from '../core/Base'\r\nimport {insertquestion,updateques,loadQuestion,onequestions} from './helper/userapicall'\r\nconst UpdateQuestions=({match}) =>{\r\n    const {token,person:{_id,email,role}}=isAuthenticated();\r\n\r\n\r\n\r\n\r\n\r\n   \r\n    const [question,setQuestion]=useState([]);\r\n    const [error,setError]=useState(false);\r\n\r\n\r\n    const loadAllQuestions=(questionId)=>{\r\n      onequestions(questionId).then(data=>{\r\n            if(data.error){\r\n                setError(data.error)\r\n            }\r\n            else{\r\n                \r\n                setQuestion({\r\n                  textone: data[0].textone,\r\n        texttwo: data[0].texttwo,\r\n        name: data[0].name,\r\n        \r\n        \r\n        success: false\r\n                })\r\n                \r\n                \r\n                \r\n            }\r\n        })\r\n    }\r\n  \r\n\r\n    useEffect(()=>{\r\n        loadAllQuestions(match.params.questionId)\r\n        \r\n\r\n    },[])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\n    \r\n      const { textone,texttwo,name,  success } = question;\r\n    \r\n      const handleChange = name => event => {\r\n        setQuestion({ ...question, error: false, [name]: event.target.value });\r\n      };\r\n    \r\n\r\n\r\n\r\n\r\n      const onSubmit = event => {\r\n        event.preventDefault();\r\n        setQuestion({ ...question, error: false });\r\n        updateques(match.params.questionId,_id,token,{ textone,texttwo,name})\r\n          .then(data => {\r\n            if (data.error) {\r\n              setQuestion({ ...question, error: data.error, success: false });\r\n            } else {\r\n              setQuestion({\r\n                ...question,\r\n                textone: \"\",\r\n                texttwo: \"\",\r\n                name: \"\",\r\n                error: \"\",\r\n                \r\n                success: true,\r\n\r\n              });\r\n              \r\n              \r\n            }\r\n          })\r\n          .catch(console.log(\"Error in Creating Question\"));\r\n      };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const InsertProfileForm = () => {\r\n        return (\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 offset-sm-3 text-left\">\r\n              <form>\r\n                <div className=\"form-group\">\r\n                  <label className=\"text-dark\">Question</label>\r\n                  <input className=\"form-control\"  onChange={handleChange(\"textone\")} type=\"text\" value={textone} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label className=\"text-dark\">Description</label>\r\n                  <input   className=\"form-control\"   onChange={handleChange(\"texttwo\")}  type=\"text\"  value={texttwo} />\r\n                </div>\r\n    \r\n                <div className=\"form-group\">\r\n                  <label className=\"text-dark\">Name</label>\r\n                  <input  onChange={handleChange(\"name\")} className=\"form-control\" type=\"text\"  value={name} />\r\n                </div>\r\n\r\n                \r\n                <button onClick={onSubmit} className=\"btn btn-success btn-block\">\r\n                  Update Question\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        );\r\n      };\r\n    \r\n\r\n\r\n\r\n      const successMessage = () => {\r\n        return (\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 offset-sm-3 text-left\">\r\n              <div  className=\"alert alert-success\"  style={{ display: success ? \"\" : \"none\" }} >\r\n                Question Updated Sussfully\r\n                \r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      };\r\n    \r\n      const errorMessage = () => {\r\n        return (\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 offset-sm-3 text-left\">\r\n              <div className=\"alert alert-danger\"  style={{ display: error ? \"\" : \"none\" }} >\r\n                {error}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      };\r\n    \r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Base title=\"Update Questions\" description=\"Update User Questions\">\r\n            {successMessage()}\r\n            {errorMessage()}\r\n            {InsertProfileForm()}\r\n            \r\n            \r\n            </Base>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateQuestions","import React from 'react'\r\nimport {BrowserRouter,Switch,Route} from \"react-router-dom\";\r\nimport Home from \"./core/Home\"\r\nimport Login from './user/Login';\r\nimport Register from './user/Register';\r\nimport AdminRoute from './auth/helper/AdminRoutes';\r\nimport PrivateRoute from './auth/helper/PrivateRoutes';\r\nimport UserDashBoard from './user/UserDashBoard';\r\nimport AdminDashBoard from './user/AdminDashBoard';\r\nimport Profile from './user/Profile';\r\nimport Allquestions from './user/Allquestions';\r\nimport Profileinsert from './user/Profileinsert';\r\nimport Addquestions from './user/Addquestions';\r\nimport Answers from './user/Answers';\r\nimport Upvote from './user/Upvote';\r\nimport Contactus from './user/Contactus';\r\nimport AnswersOfQuestion from './user/AnswerOfQuestion';\r\nimport UpdateQuestions from './user/UpdateQuestions';\r\n\r\nconst  Routes=()=> {\r\n    return (\r\n        <BrowserRouter>\r\n        <switch>\r\n            <Route path=\"/\" exact component={Home}/>\r\n            <Route path=\"/register\" exact component={Register}/>\r\n            <Route path=\"/login\" exact component={Login}/>\r\n            <Route path=\"/allquestions\" exact component={Allquestions}/>\r\n            <Route path=\"/answers/:id\" exact component={Answers}/>\r\n            <Route path=\"/question/answers/:id\" exact component={AnswersOfQuestion}/>\r\n            <Route path=\"/updatequestion/:questionId\" exact component={UpdateQuestions}/>\r\n            \r\n\r\n            <Route path=\"/contactus\" exact component={Contactus}/>\r\n\r\n\r\n\r\n            <PrivateRoute path=\"/user/dashboard\" exact component={UserDashBoard}/>\r\n            <PrivateRoute path=\"/user/profile\" exact component={Profile}/>\r\n            <PrivateRoute path=\"/user/profile/insert\" exact component={Profileinsert}/>\r\n            <PrivateRoute path=\"/user/addquestions\" exact component={Addquestions}/>\r\n            <PrivateRoute path=\"/questions/upvote/:id\" exact component={Upvote}/>\r\n\r\n\r\n\r\n\r\n            <AdminRoute path=\"/admin/dashboard\" exact component={AdminDashBoard}/>\r\n\r\n        </switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Routes;","import React from \"react\";\nimport Routes from \"./Routes\";\nimport ReactDom from \"react-dom\";\n\n\n\nReactDom.render(<Routes/>,document.getElementById(\"root\"))"],"sourceRoot":""}